<?xml version="1.0" encoding="utf-8" ?>
<Rows xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:x="urn:Row">
  <!-- Schema -->
  <xsd:schema targetNamespace="urn:Row" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" >
    <xsd:element name="Row">
      <xsd:complexType>
        <xsd:sequence>
          <xsd:element type="xsd:string" name="Property"/>
          <xsd:element type="xsd:string" name="Value"/>
          <xsd:element type="xsd:string" name="Type"/>
          <xsd:element type="xsd:string" name="Method"/>
          <xsd:element type="xsd:string" name="ExpectedExpression"/>
          <xsd:element type="xsd:boolean" name="ExpectedResult"/>
          <xsd:element type="xsd:string" name="Message"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <!--End Schema-->
  <!--Int Named Method-->
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>1</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>Equals</x:Method>
    <x:ExpectedExpression>e => e.Id.Equals(1)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Id is 1 and should equal value 1.</x:Message>
  </x:Row>
  <!--Int equals-->
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>1</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Id == 1)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Id is 1 and should equal value 1.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>2</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Id == 2)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Id is 1 and should not be equal to value 2.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>A</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Id == 0)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>A is an invalid value. It is not 10 in hex unless it has the 0x prefix.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>0xA</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Id == 10)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>0xA is 10. It is valid hex, but not equal to 1.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>Z</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Id == 0)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Z is an invalid value.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>0xZ</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Id == 0)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>0xZ is an invalid value.</x:Message>
  </x:Row>
  <!--Int Greater than-->
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>1</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>gt</x:Method>
    <x:ExpectedExpression>e => (e.Id > 1)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Id is 1 which not greater than 1.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>0</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>gt</x:Method>
    <x:ExpectedExpression>e => (e.Id > 0)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Id is 1 which is greater than 0.</x:Message>
  </x:Row>
  <!--Int Greater than or equal to-->
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>2</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>ge</x:Method>
    <x:ExpectedExpression>e => (e.Id >= 2)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Id is 1 which is not greater than 2.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>0</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>ge</x:Method>
    <x:ExpectedExpression>e => (e.Id >= 0)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Id is 1 which is greater than or equal to 0.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>1</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>ge</x:Method>
    <x:ExpectedExpression>e => (e.Id >= 1)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Id is 1 which is greater than or equal to 1.</x:Message>
  </x:Row>
  <!--Int less than-->
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>1</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>lt</x:Method>
    <x:ExpectedExpression>e => (e.Id &lt; 1)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Id is 1 which not less than 1.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>2</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>lt</x:Method>
    <x:ExpectedExpression>e => (e.Id &lt; 2)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Id is 1 which is less than 2.</x:Message>
  </x:Row>
  <!--Int less than or equal to-->
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>0</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>le</x:Method>
    <x:ExpectedExpression>e => (e.Id &lt;= 0)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Id is 1 which is not less than or equal to 0.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>2</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>le</x:Method>
    <x:ExpectedExpression>e => (e.Id &lt;= 2)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Id is 1 which is less than or equal to 2.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Id</x:Property>
    <x:Value>1</x:Value>
    <x:Type>System.Int32</x:Type>
    <x:Method>le</x:Method>
    <x:ExpectedExpression>e => (e.Id &lt;= 1)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Id is 1 which is less than or equal to 1</x:Message>
  </x:Row>
  <!--String equals -->
  <x:Row>
    <x:Property>Name</x:Property>
    <x:Value>ABC</x:Value>
    <x:Type>System.String</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Name == "ABC")</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Name is "ABC" and should equal value "ABC".</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Name</x:Property>
    <x:Value>DEF</x:Value>
    <x:Type>System.String</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Name == "DEF")</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Name is "ABC" and should not equal value "DEF".</x:Message>
  </x:Row>
  <!--String not equals -->
  <x:Row>
    <x:Property>Name</x:Property>
    <x:Value>ABC</x:Value>
    <x:Type>System.String</x:Type>
    <x:Method>ne</x:Method>
    <x:ExpectedExpression>e => (e.Name != "ABC")</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Name is "ABC" and should equal value "ABC".</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Name</x:Property>
    <x:Value>DEF</x:Value>
    <x:Type>System.String</x:Type>
    <x:Method>ne</x:Method>
    <x:ExpectedExpression>e => (e.Name != "DEF")</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Name is "ABC" and should not equal value "DEF".</x:Message>
  </x:Row>
  <!--DateTime -->
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>01/01/2017</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Date == 1/1/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>The Date is 01/01/2017 and should equal value 01/01/2017.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>01/02/2017</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Date == 1/2/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>The Date is 01/01/2017 and should not equal value 01/02/2017.</x:Message>
  </x:Row>
  <!--Date Greater than-->
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>01/02/2017</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>gt</x:Method>
    <x:ExpectedExpression>e => (e.Date > 1/2/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is not greater than 01/02/2017.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>12/31/2016</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>gt</x:Method>
    <x:ExpectedExpression>e => (e.Date > 12/31/2016 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is greater than 12/31/2016.</x:Message>
  </x:Row>
  <!--Date Greater than or equal to-->
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>01/02/2017</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>ge</x:Method>
    <x:ExpectedExpression>e => (e.Date >= 1/2/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is not greater than or equal to 01/02/2017.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>12/31/2016</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>ge</x:Method>
    <x:ExpectedExpression>e => (e.Date >= 12/31/2016 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is greater than or equal to 12/31/2016.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>01/01/2017</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>ge</x:Method>
    <x:ExpectedExpression>e => (e.Date >= 1/1/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is greater than or equal to 01/01/2017.</x:Message>
  </x:Row>
  <!--Date less than-->
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>01/02/2017</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>lt</x:Method>
    <x:ExpectedExpression>e => (e.Date &lt; 1/2/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is less than 01/02/2017.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>12/31/2016</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>lt</x:Method>
    <x:ExpectedExpression>e => (e.Date &lt; 12/31/2016 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is not less than 12/31/2016.</x:Message>
  </x:Row>
  <!--Date Greater than or equal to-->
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>01/02/2017</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>le</x:Method>
    <x:ExpectedExpression>e => (e.Date &lt;= 1/2/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is less than or equal to 01/02/2017.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>12/31/2016</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>le</x:Method>
    <x:ExpectedExpression>e => (e.Date &lt;= 12/31/2016 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>false</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is not less than or equal to 12/31/2016.</x:Message>
  </x:Row>
  <x:Row>
    <x:Property>Date</x:Property>
    <x:Value>01/01/2017</x:Value>
    <x:Type>System.DateTime</x:Type>
    <x:Method>le</x:Method>
    <x:ExpectedExpression>e => (e.Date &lt;= 1/1/2017 12:00:00 AM)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>Date is 01/01/2017 which is less than or equal to 01/01/2017.</x:Message>
  </x:Row>

  <!-- Guid -->
  <x:Row>
    <x:Property>Guid</x:Property>
    <x:Value>{C1AA6176-425D-4981-BE4A-8F5C459E0FF9}</x:Value>
    <x:Type>System.Guid</x:Type>
    <x:Method>eq</x:Method>
    <x:ExpectedExpression>e => (e.Guid == c1aa6176-425d-4981-be4a-8f5c459e0ff9)</x:ExpectedExpression>
    <x:ExpectedResult>true</x:ExpectedResult>
    <x:Message>The Guid is {C1AA6176-425D-4981-BE4A-8F5C459E0FF9} equal {C1AA6176-425D-4981-BE4A-8F5C459E0FF9}.</x:Message>
  </x:Row>
</Rows>